# Student Performance Prediction Project

# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset (you can replace with your own dataset CSV)
url = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/StudentsPerformance.csv"
data = pd.read_csv(url)

# Display first rows
print("Dataset Preview:")
print(data.head())

# Data Preprocessing
# Convert categorical columns to numeric using label encoding
data = pd.get_dummies(data, drop_first=True)

# Features and Target
X = data.drop("math score", axis=1)
y = data["math score"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

# Plot Actual vs Predicted
plt.scatter(y_test, y_pred, alpha=0.7, color="blue")
plt.xlabel("Actual Scores")
plt.ylabel("Predicted Scores")
plt.title("Actual vs Predicted Student Scores")
plt.show()
